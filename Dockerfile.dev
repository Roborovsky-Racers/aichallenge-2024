ARG BASE_IMAGE
FROM ${BASE_IMAGE}

ARG USERNAME
ARG UID
ARG GID

USER root
ENV HOME=/home/${USERNAME}

# create user
RUN groupadd -g "${GID}" "${USERNAME}" || true; \
    useradd -u "${UID}" -g "${GID}" --create-home --home-dir "${HOME}" --shell /bin/bash --groups adm,sudo "${USERNAME}"; \
    echo "${USERNAME}:${USERNAME}" | chpasswd; \
    echo "${USERNAME} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# install additional packages
RUN apt-get update -q \
    && apt-get upgrade -yqq \
    && apt-get install -yqq --no-install-recommends -y \
    vim \
    tmux \
    python3-rosdep \
    python3-vcstool \
    python3-colcon-common-extensions

# remove apt.conf.d/docker-clean to enable auto-completion of apt command
RUN rm /etc/apt/apt.conf.d/docker-clean

# install mold
RUN git clone -b v2.30.0 https://github.com/rui314/mold.git /usr/local/mold \
    && mkdir /usr/local/mold/build \
    && cd /usr/local/mold/build \
    && ../install-build-deps.sh \
    && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=c++ .. \
    && cmake --build . -j $(nproc) \
    && cmake --build . --target install

# install fzf
RUN git clone https://github.com/junegunn/fzf.git ~/.fzf \
    && ~/.fzf/install --all --key-bindings --completion --update-rc --no-zsh --no-fish \
    && echo "export FZF_DEFAULT_COMMAND='rg --files --hidden --glob \"!.git\"'" >> "${HOME}/.fzf.bash" \
    && echo "export FZF_DEFAULT_OPTS='--height 40% --reverse --border'" >> "${HOME}/.fzf.bash"

# apply colorized patch to colcon
# ref.: https://github.com/colcon/colcon-core/pull/487/files#diff-043de46368c04caef5538ebc321cfdc1e69c3626b4d00ccd4e3dbf346a846a46R46
ARG COLCON_PATH_DIR="/usr/lib/python3/dist-packages/colcon_core/event_handler/"
COPY ./colcon_colorized_patch.diff ${COLCON_PATH_DIR}/patch.diff
RUN cd ${COLCON_PATH_DIR} \
    && patch console_start_end.py < patch.diff

# create ccache and vscode_server directory for persitent
RUN CACHE_DIR="${HOME}/.cache" \
    && CCACHE_DIR="${CACHE_DIR}/ccache" \
    && mkdir -p ${CCACHE_DIR} \
    && chown -R ${USERNAME}:${USERNAME} ${CACHE_DIR} \
    && VSCODE_SERVER_DIR="${HOME}/.vscode-server" \
    && mkdir -p ${VSCODE_SERVER_DIR} \
    && chown -R ${USERNAME}:${USERNAME} ${VSCODE_SERVER_DIR}

# enable bash history in container
RUN SNIPPET="export PROMPT_COMMAND='history -a' && export HISTFILE=/commandhistory/.bash_history && export HISTCONTROL=ignoredups:erasedups" \
    && mkdir /commandhistory \
    && touch /commandhistory/.bash_history \
    && chown -R ${USERNAME}:${USERNAME} /commandhistory \
    && echo ${SNIPPET} >> "${HOME}/.bashrc"

# ros settings
COPY --chown=${USERNAME}:${USERNAME} ./.rosrc ${HOME}/.rosrc
RUN echo "source ~/.rosrc" >> ${HOME}/.bashrc

# change to user
USER ${USERNAME}

# persistence .config and .ros/log in container
RUN mkdir -p ${HOME}/.config
RUN mkdir -p ${HOME}/.ros/log

WORKDIR /aichallenge
